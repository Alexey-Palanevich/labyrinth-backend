import {
  ApiExtraModels,
  ApiProperty,
  ApiPropertyOptional,
} from '@nestjs/swagger';
import { AvailableAlgorithms } from 'domain/algorithms/AvailableAlgorithms';
import { Cell } from 'domain/labyrinth/boundaries/entities/IScheme';
import { Maybe } from 'infra/common/Maybe';

import type { IScheme } from 'domain/labyrinth/boundaries/entities/IScheme';
import type { ICreateLabyrinthUseCaseInputDto } from 'domain/labyrinth/boundaries/use-cases/ICreateLabyrinthUseCase';

export class CreateLabyrinthInputDto
  implements ICreateLabyrinthUseCaseInputDto
{
  @ApiProperty({
    description: 'labyrinth name, must be unique',
    nullable: false,
  })
  name: string;

  @ApiProperty({
    description: `algorithm from next list [${Object.values(
      AvailableAlgorithms,
    ).join(', ')}]`,
    enum: AvailableAlgorithms,
    nullable: false,
  })
  algorithm: AvailableAlgorithms;

  @ApiExtraModels()
  @ApiPropertyOptional({
    description:
      "Ready Scheme in right format. Scheme is generated by a algorithm if it isn't passed.",
    type: 'array',
    items: {
      type: 'array',
      minItems: 1,
      items: {
        minItems: 1,
        type: 'Cell',
      },
    },
  })
  scheme: Maybe<IScheme>;
}
